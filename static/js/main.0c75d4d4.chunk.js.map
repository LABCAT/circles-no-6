{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/classes/BubbleCircles.js","audio/circles-no-6.ogg","audio/circles-no-6.mid","js/P5SketchWithAudio.js","js/functions/ColourCalculators.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","BubbleCircles","startX","startY","hueOrColour","this","p","x","y","colour","isObject","color","hue","_getHue","count","random","circles","i","push","size","parseInt","variable","Array","isArray","length","circle","_getSaturation","_getBrightness","stroke","strokeWeight","ellipse","noFill","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","noteSet2","scheduleCueSet","document","getElementById","classList","add","remove","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","note","ticks","time","addCue","maxDist","baseHue","baseHueOptions","stepSize","setup","createCanvas","background","colorMode","HSB","dist","draw","isPlaying","bubbleCircles","forEach","backgroundX","backgroundY","bgCirles","bgDelay","colourSet","centerLocations","setPatternCenter","modulus","index","lowerX","upperX","lowerY","upperY","lowX","upX","lowY","upY","shuffle","executeCueSet1","colours","saturation","brightness","set","TetradicColourCalculator","Math","max","j","noStroke","bgCirle","executeCueSet2","hasStarted","mousePressed","pause","currentTime","buffer","duration","reset","dataLayer","title","location","href","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c75d4d4.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","export default class BubbleCircles {\n\tconstructor(p5, startX, startY, hueOrColour) {\n        this.p = p5;\n        this.x = startX;\n        this.y = startY;\n        this.colour = this.isObject(hueOrColour) ? hueOrColour : this.p.color(hueOrColour, 100, 100);\n        this.hue = this.colour._getHue();\n        this.count = this.p.random(4, 16); \n        this.circles = [];\n        for (let i = 0; i < this.count; i++) {\n            this.circles.push(\n                {\n                    x: this.x,\n                    y: this.y,\n                    size: parseInt(this.p.random(16, 64)),\n                    colour: this.p.color(\n                        this.hue,\n                        this.p.random(50, 100),\n                        this.p.random(50, 100),\n                    )\n                }\n            );\n        }\n    }\n\n    isObject(variable) {\n        return typeof variable === 'object' &&\n            variable !== null &&\n            !Array.isArray(variable);\n    }  \n\n    draw(){\n        const distanceAdjuster = 40;\n        for (let i = 0; i < this.circles.length; i++) {\n            const circle = this.circles[i],\n                { x, y, size, colour } = circle;\n            if(size > 0) {\n                this.p.fill(colour._getHue(),colour._getSaturation(), colour._getBrightness(), 0.2);\n                this.p.stroke(colour);\n                this.p.strokeWeight(2);\n                this.p.ellipse(x, y, size, size);\n                this.p.noFill();\n                this.p.ellipse(x, y, size / 2, size / 2);\n                this.p.ellipse(x, y, size / 4, size / 4);\n                this.circles[i].x = x - this.p.random(-distanceAdjuster, distanceAdjuster);    \n                this.circles[i].y = y - this.p.random(-distanceAdjuster, distanceAdjuster);    \n                this.circles[i].size = size - this.p.random(0.1, 0.4);    \n            }\n            \n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/circles-no-6.bfb4df36.ogg\";","export default __webpack_public_path__ + \"static/media/circles-no-6.eaa06bdd.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport { TetradicColourCalculator } from './functions/ColourCalculators';\nimport BubbleCircles from './classes/BubbleCircles';\n\nimport audio from \"../audio/circles-no-6.ogg\";\nimport midi from \"../audio/circles-no-6.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[12].notes; // SubTractor 1 - HyperBottom\n                    const noteSet2 = result.tracks[7].notes; // Combinator 2 - Gates of Heaven\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.maxDist = 0;\n\n        p.baseHue = 0;\n        \n        p.baseHueOptions = [0,20,40,60,80,100,120,140,160,180,200,220,240,260,280,300,320,340];\n\n        p.stepSize = 60;\n\n        p.setup = () => {\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.background(0);\n            p.background(0, 0 , 100);\n            p.colorMode(p.HSB);\n            p.maxDist = p.dist(0, 0, p.width, p.height);\n            // p.stepSize = p.random([15, 30, 45, 60]);\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n                p.bubbleCircles.forEach(circles => {\n                    circles.draw();\n                });\n            }\n        }\n\n        p.backgroundX = 0;\n\n        p.backgroundY = 0;\n\n        p.bgCirles = [];\n\n        p.bgDelay = [];\n\n        p.colourSet = [];\n\n        p.centerLocations = [];\n\n        p.setPatternCenter = (modulus) => {\n            const divisor = 8, \n                index = modulus === 0 ? 7 : modulus;\n            let lowerX = p.width / 2 - p.width / divisor, \n                upperX = p.width / 2 + p.width / divisor, \n                lowerY = p.height / 2 - p.height / divisor, \n                upperY = p.height / 2 + p.height / divisor;\n            if (index > 3) {\n                if(index === 4) {\n                    for (let i = 0; i < 4; i++) {\n                        p.centerLocations[i] = {\n                            lowX: i % 2 ? p.width / divisor : p.width / 2 + p.width / divisor, \n                            upX: i % 2 ? p.width / 2 - p.width / divisor : p.width - p.width / divisor, \n                            lowY: i < 2  ? p.height / divisor : p.height / 2 + p.height / divisor, \n                            upY: i < 2  === 1  ? p.height / 2 - p.height / divisor : p.height - p.height / divisor, \n                        }\n                        p.shuffle(p.centerLocations);\n                    }\n                }\n                const { lowX, upX, lowY, upY } = p.centerLocations[index - 4];\n                lowerX = lowX; \n                upperX = upX;\n                lowerY = lowY; \n                upperY = upY;\n                \n            } \n            else if (index > 2) {\n                lowerX = p.width / 2 + p.width / divisor;\n                upperX = p.width - p.width / divisor;\n            } \n            else if (index > 1) {\n                lowerX = p.width / divisor;\n                upperX = p.width / 2 - p.width / divisor;\n            }\n            p.backgroundX = p.random(lowerX, upperX);\n            p.backgroundY = p.random(lowerY, upperY);\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue } = note;\n            if(currentCue % 7 === 1) {\n                if(currentCue > 7) {\n                    p.stepSize = p.stepSize - 10;\n                }\n                p.baseHue = parseInt(p.random(p.baseHueOptions));\n                const colours = TetradicColourCalculator(p, p.baseHue);\n                p.colourSet = [];\n                for (let i = 0; i < colours.length; i++) {\n                    const colour = colours[i],\n                        hue = parseInt(colour._getHue());\n                    if(i === 0){\n                        p.baseHue = hue;\n                    }\n                    else {\n                        p.colourSet.push(hue);\n                    }\n                }\n            }\n            \n            p.background(0);\n            p.setPatternCenter(currentCue % 7);\n            const numOfLoops = p.width >= p.height \n                ? Math.max(p.backgroundX, p.width - p.backgroundX) / p.stepSize\n                : Math.max(p.backgroundY, p.height - p.backgroundY) / p.stepSize;\n            let count = 0;\n            for(let i = 0; i <= p.width + p.stepSize; i += p.stepSize) {\n                for(let j = 0; j <= p.height + p.stepSize; j += p.stepSize) {\n                    let size = p.dist(p.backgroundX, p.backgroundY, i, j);\n                    size = size / p.maxDist * 66;\n                    p.bgCirles[count] = {\n                        x: i,\n                        y: j,\n                        size: size\n                    }\n                    count++;\n                }\n            }\n            // let count = 0;\n            // for (let i = 1; i < numOfLoops; i++) {\n            //     let circles = [];\n            //     p.bgCirles[count] = [];\n            //     for (let j = p.backgroundX - (p.stepSize * i); j <= p.backgroundX + (p.stepSize * i); j += p.stepSize) {\n            //         for (let k = p.backgroundY - (p.stepSize * i); k <= p.backgroundY + (p.stepSize * i); k += p.stepSize) {\n            //             let size = p.dist(p.backgroundX, p.backgroundY, j, k);\n            //             size = size / p.maxDist * 66;\n            //             p.bgCirles[count].push(\n            //                 {\n            //                     x: j,\n            //                     y: k,\n            //                     size: size\n            //                 }\n            //             );\n            //         }\n            //     }\n            //     count++;\n            // }\n            \n            p.noStroke();\n            for (let i = 0; i < p.bgCirles.length; i++) {\n                p.fill(p.baseHue, 100, 100, (90 / p.bgCirles.length) * i / 100);\n                const bgCirle = p.bgCirles[i],\n                    { x, y, size } = bgCirle;\n                p.ellipse(x, y, size, size);\n            }\n\n            // for (let i = 0; i < p.bgCirles.length; i++) {\n            //     const circles = p.bgCirles[i];\n            //     for (let j = 0; j < circles.length; j++) {\n            //         p.fill(p.baseHue, 100, 100, (90 / p.bgCirles.length) * j / 100);\n            //         const bgCirle = circles[j],\n            //             { x, y, size } = bgCirle;\n            //         p.ellipse(x, y, size, size);\n            //     }\n            // }\n        }\n\n        p.bubbleCircles = [];\n\n        p.executeCueSet2 = (note) => {\n            const { currentCue } = note;\n\n            if(currentCue % 7 === 1) {\n                p.bubbleCircles = [];\n            }\n\n            p.bubbleCircles[currentCue % 7] = new BubbleCircles(\n                p,\n                p.backgroundX,\n                p.backgroundY,\n                p.colourSet[currentCue % 3]\n            );\n\n        }   \n\n        p.hasStarted = false;\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                        if (typeof window.dataLayer !== typeof undefined){\n                            window.dataLayer.push(\n                                { \n                                    'event': 'play-animation',\n                                    'animation': {\n                                        'title': document.title,\n                                        'location': window.location.href,\n                                        'action': 'replaying'\n                                    }\n                                }\n                            );\n                        }\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                    if (typeof window.dataLayer !== typeof undefined && !p.hasStarted){\n                        window.dataLayer.push(\n                            { \n                                'event': 'play-animation',\n                                'animation': {\n                                    'title': document.title,\n                                    'location': window.location.href,\n                                    'action': 'start playing'\n                                }\n                            }\n                        );\n                        p.hasStarted = false\n                    }\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","function TetradicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 4){\n        hue = hue + i * 90;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction TriadicColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 3){\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        hue = hue + 120 < 360 ? hue + 120 : hue - 240;\n        i++;\n    }\n\n\n  return set;\n}\n\nfunction ComplementaryColourCalculator(p5, hue, saturation = 100, brightness = 100) {\n    let set = [];\n    let i = 0;\n    while(i < 2){\n        hue = hue + i * 180;\n        hue = hue < 360 ? hue : hue - 360;\n        const colour = p5.color(\n          hue,\n          saturation,\n          brightness,\n          1\n        );\n        set.push(colour);\n        i++;\n    }\n\n\n  return set;\n}\n\nexport { TetradicColourCalculator, TriadicColourCalculator, ComplementaryColourCalculator };","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}